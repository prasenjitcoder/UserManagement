security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        # Our user class and the algorithm we'll use to encode passwords
        # https://symfony.com/doc/current/security.html#c-encoding-the-user-s-password
        App\Entity\User:
            algorithm: bcrypt
    
    
    
    providers:
        # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
        # In this example, users are stored via Doctrine in the database
        # To see the users at src/App/DataFixtures/ORM/LoadFixtures.php
        # To load users from somewhere else: https://symfony.com/doc/current/security/custom_provider.html
        my_provider:
            entity: 
                class: App\Entity\User
                property: username
        
        
        
        
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html
            
            form_login:
                check_path: /
                login_path: /     
                provider: my_provider
            logout:
                path: /logout
                target: /

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         ##- { path: ^/userhome, roles: ROLE_ADMIN }
         #- { path: ^/adduser, roles: ROLE_ADMIN }
         #- { path: ^/userlist, roles: ROLE_ADMIN }
         #- { path: ^/addgroup, roles: ROLE_ADMIN }
         #- { path: ^/grouplist, roles: ROLE_ADMIN }
         #- { path: ^/userlist, roles: ROLE_ADMIN }
         #- { path: ^/deletegroups, roles: ROLE_ADMIN }
